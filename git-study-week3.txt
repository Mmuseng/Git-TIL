PR(Pull Request, 풀리퀘스트) : 내 작업내역을 바로 merge 하지 않고, 참여하고 있는 프로젝트에 내 작업(branch)를 merge해달라고 요청(Request) 를 먼저 보내는 것.

​

Commit 관리하기

작업하다가 commit 메시지에 오타가 났거나 파일을 까먹고 add(staging)하는 경우 ->

최신의 commit을 수정하는 것 : amend(어맨드,고치기)

 - amend 로는 가장 최신의 commit 만 고칠 수 있다.

​

다른 사람들과 같이 협업하고 있다면 어떤 내용이 되돌려졌는지 기록으로 남기는 것도 중요 ->

어떤 내용을 되돌렸는지 새로운 commit을 남기는 것 : revert(리버트)

 - 최신 commit 뿐만 아니라 이전에 했던 commit 도 revert 로 되돌릴 수 있음

​

reset (리셋) : commit 했던 작업내역을 말 그대로 리셋시키는 것

 - reset 이후에 작업내역은 없어진 commit 기록과 관계없음.

​

stash(스태시) : 프로젝트의 변경사항을 임시적으로 보관해둘 때 사용 

 ex) 다른 branch 로 체크아웃 하는 경우 현재 branch 의 변경사항이 사라지게 됨. 

 아직 작업 중이라서 commit 하지 않고 변경사항만 보관해두고 싶을 때 ->  commit 대신 stash 를 사용

​

commit 메세지 작성하는 규칙 : commit 메시지 컨벤션(commit message convention)

 (프로그래밍 세계에서 서로 조직(특정 기술을 사용하는 사람들, 회사 등)에서 합의한 규칙을 convention (컨벤션) 이라고 부름)

​

좋은 commit 메시지, 단위로 작성하게 되면 

 - 어떤 작업을 했는지 commit history (commit log)만 보고 알 수 있다

 - 버그를 찾을 때와 코드 고치기 쉽다

 - 다른 사람이 코드를 리뷰할 때 편하다

​

코드 리뷰를 하는 이유

 - 코드의 품질을 높일 수 있다

 - 다른 사람의 눈으로 버그를 빠르게 발견할 수 있다

 - 서로의 지식을 나누면서, 더 나은 방법을 찾아낼 수 있다

    → 내가 만든 코드가 아니라 팀의 코드의 품질을 높인다

​

.gitignore : 공유하거나 공개되면 안되는 파일들을 Git이 무시하게 되는 설정